package de.sbuettner.vs;

// 05.04.16

/**
 *
 * @author Peter Altenberd (Translated into English by Ronald Moore)
 *         Computer Science Dept. Fachbereich Informatik Darmstadt Univ. of
 *         Applied Sciences Hochschule Darmstadt
 */

import java.io.*;
import java.net.*;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.List;

public class SocketServer extends Thread {

	static String line;
	static BufferedReader fromClient;
	static DataOutputStream toClient;
	static List<String> history = new java.util.ArrayList<String>();
	static FileWriter fw;

	public void run(int port) {
		System.out.println("Starting SocketServer Thread!");
		ServerSocket contactSocket;
		try {
			contactSocket = new ServerSocket(port);		// original war Port 9999
			fw = new FileWriter("log/history.log");
			while (true) {								// Handle connection request
				Socket client = contactSocket.accept(); // create communication socket
				System.out.println("Connection with: " + client.getRemoteSocketAddress());
				handleRequests(client);
			}
		} catch (IOException e) {
			e.printStackTrace();
		}	
	}

	static void handleRequests(Socket client) {
		try {
			fromClient = new BufferedReader( 						// Datastream FROM Client
					new InputStreamReader(client.getInputStream()));
			toClient = new DataOutputStream(client.getOutputStream()); 	// Datastream TO Client
			while (receiveRequest()) {								// As long as connection exists
				sendResponse();
			}
			fromClient.close();
			toClient.close();
			client.close();
			System.out.println("Session ended, Server remains active");
		} catch (Exception e) {
			System.out.println(e);
		}
	}

	static boolean receiveRequest() throws IOException {
		boolean holdTheLine = true;
		line = fromClient.readLine();
		SimpleDateFormat myDate = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss");//dd/MM/yyyy
		System.out.println(myDate.format(new Date()) + " : " + (line));
		history.add(myDate.format(new Date()) + " : " + line);
		fw.write(myDate.format(new Date()) + " : " + line);
		if (line.equals(".")) {										// End of session?
			holdTheLine = false;
		}
		return holdTheLine;
	}

	static void sendResponse() throws IOException {
		toClient.writeBytes(line);				// Send answer
	}
}
